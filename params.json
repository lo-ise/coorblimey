{"name":"coorblimey","tagline":"Convert between geocentric and geographic coordinates","body":"[![Code Climate](https://codeclimate.com/github/lo-ise/coorblimey/badges/gpa.svg)](https://codeclimate.com/github/lo-ise/coorblimey) [![circleci](https://circleci.com/gh/lo-ise/coorblimey.png?style=shield)](https://circleci.com/gh/lo-ise/coorblimey)\r\n\r\n## What is it?\r\n\r\ncoorblimey is an open source Python3 library to transform geocentric coordinates to geographic, and vice versa. \r\n\r\nFormulas for the calculations have been taken from:\r\n\r\n_Datums and Map Projections: For Remote Sensing, GIS and Surveying, Second Edition, by Jonathan IIiffe (Editor), Roger Lott._\r\n\r\nResults were checked against [this handy tool](http://www.apsalin.com/convert-cartesian-to-geodetic.aspx). \r\n\r\n\r\n## In it's present state...\r\n\r\n... it only does the geocentric to geographic bit, and only has the ability to do this with either GRS80 or WGS84 ellipsoids.\r\n\r\nIt outputs latitude, longitude and height above ellipsoid. The precision of this for latitude and longitude is 10 decimal places. For height, to the millimetre. \r\n\r\n## Usage\r\n\r\nYou can either use this as a command line tool, or as a module to import into your Python programs. \r\n\r\n### As a command line tool...\r\n\r\n    python coorblimey.py -t to_geographic -x 1418595 -y -689557 -z -6159338 -e GRS80\r\n\r\nThis will print the results:\r\n\r\n    Geographic coordinates (GRS80)\r\n    lat: -75.7283616724, lon: -25.9236668699, h: 30.705\r\n\r\n### As a module to import...\r\n\r\n```python\r\nfrom coorblimey.geocentrics import Geocentrics\r\n    \r\ngeo      = Geocentrics(654321, 765433, 98765432, ellipsoid='GRS80')\r\nlatlongs = geo.make_geographic()\r\n```\r\n\r\n`latlongs` will be a list of `[x, y, z]`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}